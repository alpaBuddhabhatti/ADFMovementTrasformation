{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "envName": {
      "type": "string",
      "defaultValue": "dev"
    },
    //"appName": {
    //  "type": "string",
    //  "defaultValue": "[concat('az',parameters('envName'),'-funapp-', uniqueString(resourceGroup().id))]",
    //  "metadata": {
    //    "description": "The name of the function app that you wish to create."
    //  }
    //},
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "appInsightsLocation": {
      "type": "string",
      "metadata": {
        "description": "Location for Application Insights"
      }
    },

    "functionAppName": {
      "type": "string",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "coreStorageAccount": {
      "type": "string",
      "metadata": {
        "description": "The external storage account to reference in app.settings"
      }
    },
    "sku": {
      "type": "string",
      "allowedValues": [
        "Free",
        "Shared",
        "Basic",
        "Standard"
      ],
      "defaultValue": "Standard",
      "metadata": {
        "description": "The pricing tier for the hosting plan."
      }
    },
    "runtime": {
      "type": "string",
      "defaultValue": "dotnet",
      "allowedValues": [
        "node",
        "dotnet",
        "java"
      ],
      "metadata": {
        "description": "The language worker runtime to load in the function app."
      }
    },
    "workerSize": {
      "type": "string",
      "allowedValues": [
        "0",
        "1",
        "2"
      ],
      "defaultValue": "0",
      "metadata": {
        "description": "The instance size of the hosting plan (small, medium, or large)."
      }
    }
  },
  "variables": {
    "functionAppName": "[concat('az',parameters('envName'),'-',parameters('functionAppName'),'-funapp')]",
    "hostingPlanName": "[concat('az',parameters('envName'),'-',parameters('functionAppName'),'-funapp')]",
    "applicationInsightsName": "[concat('az',parameters('envName'),'-',parameters('functionAppName'),'-funappInsight')]",
    //"storageAccountName": "[concat(uniquestring(resourceGroup().id), 'azfunctions')]",
    "functionWorkerRuntime": "[parameters('runtime')]",
    "storageAccountName": "[concat(parameters('coreStorageAccount'), 'funcs')]",
    "functionAppNameResourceID": "[resourceId('Microsoft.Web/sites', concat('az',parameters('envName'),'-',parameters('functionAppName'),'-funapp'))]"

  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2015-04-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[resourceGroup().location]",
      "properties": {
                      "name": "[variables('hostingPlanName')]",
                      "sku": "[parameters('sku')]",
                      "workerSize": "[parameters('workerSize')]",
                      "hostingEnvironment": "",
                      "numberOfWorkers": 1
                    }
    },
    {
      "apiVersion": "2020-06-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "[resourceId('Microsoft.Insights/components',variables('applicationInsightsName'))]"
      ],
      "kind": "functionapp",
      "location": "[parameters('location')]",
      "name": "[variables('functionAppName')]",
      "properties": {
        "FUNCTIONS_EXTENSION_VERSION": "~3",
        "FUNCTIONS_WORKER_RUNTIME": "dotnet",
        "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('microsoft.insights/components', variables('applicationInsightsName')), '2020-02-02-preview').InstrumentationKey]",
        "AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]",
        "StorageConnectionAppSetting": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';')]"
      },
      "type": "Microsoft.Web/sites"
    },
    {
      "name": "[variables('applicationInsightsName')]",
      "type": "Microsoft.Insights/components",
      "apiVersion": "2015-05-01",
      "location": "[resourceGroup().location]",
      "kind": "other",
      "properties": {
        "Application_Type": "other",
        "ApplicationId": "[variables('functionAppNameResourceID')]"
      }
    }
  ]
}